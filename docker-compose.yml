version: "3.8"

services:
  mongo_db:
    container_name: mongo
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    networks:
      - sw-network
  redis:
    image: redis
    env_file: .env
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - sw-network
  test_runner:
     build:
      context: ./service-app
     environment:
       SPRING_PROFILES_ACTIVE: test
       TESTCONTAINERS_HOST_OVERRIDE: host.docker.internal
     volumes:
       - .m2:/root/.m2
       - /var/run/docker.sock:/var/run/docker.sock
     command: mvn verify
     networks:
       - sw-network
  app:
   container_name: sw-service-app
   depends_on:
     - mongo_db
   build:
    context: ./service-app
   restart: on-failure
   env_file: .env
   ports:
     - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
   environment:
     SPRING_PROFILES_ACTIVE: prod
     SPRING_APPLICATION_JSON: '{
          "spring.data.mongodb.uri" : "mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongo_db:$MONGODB_DOCKER_PORT/$MONGODB_DATABASE?authSource=admin"
      }'
   volumes:
     - .m2:/root/.m2
   stdin_open: true
   tty: true
   networks:
     - sw-network

  frontend:
    container_name: sw-service-app-frontend
    build:
      context: ./service-app-fe
    volumes:
      - ./service-app-fe:/app
      - /app/node_modules     
    ports:
      - 80:4200
    stdin_open: true
    tty: true
    networks:
      - sw-network

networks:
  sw-network:
    driver: bridge

volumes:
  db: